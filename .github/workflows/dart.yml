# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: dart-lang/setup-dart@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
    # Include the flutter action
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: 3.16.6

      - name: Install dependencies
        run: flutter pub get

      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Build Web Release
        run: flutter build web --release

      - name: FTP Deploy
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
    # ftp server
          server: ${{ secrets.FTP_SERVER }}
    # ftp username
          username:  ${{ secrets.FTP_USERNAME }}
    # ftp password
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: build/web/
          exclude: |
            build/web/index.html
            build/web/.htaccess


    


