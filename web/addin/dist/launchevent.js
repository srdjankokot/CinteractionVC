const accessToken=localStorage.getItem("accessToken");function onMessageSendHandler(e){accessToken?fetchMeetingDetails(e):showLogin(e)}async function fetchMeetingDetails(e){const t=Office.context.mailbox.item;try{const[s,o]=await Promise.all([new Promise(((e,s)=>{t.subject.getAsync((t=>{t.status===Office.AsyncResultStatus.Succeeded?e(t.value):s(new Error(t.error.message))}))})),new Promise(((e,s)=>{t.start.getAsync((t=>{t.status===Office.AsyncResultStatus.Succeeded?e(t.value):s(new Error(t.error.message))}))}))]);if(s&&""!==s.trim()&&o){const e=(e=>{const t=new Date(e);return t.setMinutes(t.getMinutes()),`${t.getFullYear()}-${String(t.getMonth()+1).padStart(2,"0")}-${String(t.getDate()).padStart(2,"0")} ${String(t.getHours()).padStart(2,"0")}:${String(t.getMinutes()).padStart(2,"0")}`})(o);console.log("Formatted StartTime:",e);try{await window.scheduleMeet(s,s,"",e,"Europe/Belgrade",accessToken),console.log("Meeting successfully scheduled.")}catch(e){console.error("Error scheduling the meeting:",e)}}else console.warn("ScheduleMeet not called: missing subject or startTime.");e.completed({allowEvent:!0})}catch(t){console.error("Failed to retrieve subject or start time:",t.message),e.completed({allowEvent:!0})}}function showLogin(e){e.completed({allowEvent:!1,errorMessage:"You are not authorized!"})}Office.actions.associate("onMessageSendHandler",onMessageSendHandler);